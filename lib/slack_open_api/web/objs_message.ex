defmodule SlackOpenApi.Web.ObjsMessage do
  @moduledoc """
  Provides struct and type for a ObjsMessage
  """

  @type t :: %__MODULE__{
          attachments: [SlackOpenApi.Web.ObjsMessageAttachments.t()] | nil,
          blocks: [SlackOpenApi.Web.Blocks.t()] | nil,
          bot_id: map | nil,
          bot_profile: SlackOpenApi.Web.ObjsBotProfile.t() | nil,
          client_msg_id: String.t() | nil,
          comment: SlackOpenApi.Web.ObjsComment.t() | nil,
          display_as_bot: boolean | nil,
          file: SlackOpenApi.Web.ObjsFile.t() | nil,
          files: [SlackOpenApi.Web.ObjsFile.t()] | nil,
          icons: SlackOpenApi.Web.ObjsMessageIcons.t() | nil,
          inviter: String.t() | nil,
          is_delayed_message: boolean | nil,
          is_intro: boolean | nil,
          is_starred: boolean | nil,
          last_read: String.t() | nil,
          latest_reply: String.t() | nil,
          name: String.t() | nil,
          old_name: String.t() | nil,
          parent_user_id: String.t() | nil,
          permalink: String.t() | nil,
          pinned_to: [String.t()] | nil,
          purpose: String.t() | nil,
          reactions: [SlackOpenApi.Web.ObjsReaction.t()] | nil,
          reply_count: integer | nil,
          reply_users: [String.t()] | nil,
          reply_users_count: integer | nil,
          source_team: String.t() | nil,
          subscribed: boolean | nil,
          subtype: String.t() | nil,
          team: String.t() | nil,
          text: String.t(),
          thread_ts: String.t() | nil,
          topic: String.t() | nil,
          ts: String.t(),
          type: String.t(),
          unread_count: integer | nil,
          upload: boolean | nil,
          user: String.t() | nil,
          user_profile: SlackOpenApi.Web.ObjsUserProfileShort.t() | nil,
          user_team: String.t() | nil,
          username: String.t() | nil
        }

  defstruct [
    :attachments,
    :blocks,
    :bot_id,
    :bot_profile,
    :client_msg_id,
    :comment,
    :display_as_bot,
    :file,
    :files,
    :icons,
    :inviter,
    :is_delayed_message,
    :is_intro,
    :is_starred,
    :last_read,
    :latest_reply,
    :name,
    :old_name,
    :parent_user_id,
    :permalink,
    :pinned_to,
    :purpose,
    :reactions,
    :reply_count,
    :reply_users,
    :reply_users_count,
    :source_team,
    :subscribed,
    :subtype,
    :team,
    :text,
    :thread_ts,
    :topic,
    :ts,
    :type,
    :unread_count,
    :upload,
    :user,
    :user_profile,
    :user_team,
    :username
  ]

  @doc false
  @spec __fields__(atom) :: keyword
  def __fields__(type \\ :t)

  def __fields__(:t) do
    [
      attachments: [{SlackOpenApi.Web.ObjsMessageAttachments, :t}],
      blocks: [{SlackOpenApi.Web.Blocks, :t}],
      bot_id: :map,
      bot_profile: {SlackOpenApi.Web.ObjsBotProfile, :t},
      client_msg_id: {:string, :generic},
      comment: {SlackOpenApi.Web.ObjsComment, :t},
      display_as_bot: :boolean,
      file: {SlackOpenApi.Web.ObjsFile, :t},
      files: [{SlackOpenApi.Web.ObjsFile, :t}],
      icons: {SlackOpenApi.Web.ObjsMessageIcons, :t},
      inviter: {:string, :generic},
      is_delayed_message: :boolean,
      is_intro: :boolean,
      is_starred: :boolean,
      last_read: {:string, :generic},
      latest_reply: {:string, :generic},
      name: {:string, :generic},
      old_name: {:string, :generic},
      parent_user_id: {:string, :generic},
      permalink: {:string, :uri},
      pinned_to: [string: :generic],
      purpose: {:string, :generic},
      reactions: [{SlackOpenApi.Web.ObjsReaction, :t}],
      reply_count: :integer,
      reply_users: [string: :generic],
      reply_users_count: :integer,
      source_team: {:string, :generic},
      subscribed: :boolean,
      subtype: {:string, :generic},
      team: {:string, :generic},
      text: {:string, :generic},
      thread_ts: {:string, :generic},
      topic: {:string, :generic},
      ts: {:string, :generic},
      type: {:string, :generic},
      unread_count: :integer,
      upload: :boolean,
      user: {:string, :generic},
      user_profile: {SlackOpenApi.Web.ObjsUserProfileShort, :t},
      user_team: {:string, :generic},
      username: {:string, :generic}
    ]
  end
end
